Workbler
========
Workbler allows you to do background jobs when you deploy your JRuby on Rails application as war file.

Getting Started
===============
1. Make sure you can install RubyGem from GitHub (you only have to do this once): jruby -S gem sources -a http://gems.github.com
2. Install and start RabbitMQ (see below)
3. Install warbler gem: jruby -S gem install warbler
4. Install JRuby RabbitMQ Client: jruby -S gem install jerryluk-rabbitmq-jruby-client
5. Install Workbler Plugin: jruby script/plugin install git://github.com/jerryluk/workbler.git
6. Run the Workbler generator: jruby script/generate workbler workble
7. Code Code Code
8. To run background task in development mode, open a new terminal, and run "jruby script/workbler" in the app directory
9. When you are ready to deploy, run: "warble"
10. Deploy your railsapp.war file to your favorite Java application server

Example Usage
=============
Create a worker class in app/workers/test_worker:

  class TestWorker < Workbler::Worker
    def test(options)
      logger.info("SyncWorker with options: #{options.inspect}")
    end
  end

In anywhere of your code, do:
 Workbler.run(:test_worker, :test, { :something => 123 })


Configuration
=============
Please see config/workbler.yml

Installing RabbitMQ on OS X
===========================
1. Install MacPorts
2. sudo port install erlang
3. wget http://www.rabbitmq.com/releases/rabbitmq-server/v1.5.3/rabbitmq-server-generic-unix-1.5.3.tar.gz
4. tar zxvf rabbitmq-server-generic-unix-1.5.3.tar.gz
5. sudo mv rabbitmq_server-1.5.3 /opt/local/lib/erlang/lib

To run RabbitMQ
6. sudo /opt/local/lib/erlang/lib/rabbitmq_server-1.5.3/sbin/rabbitmq-server

Credits
=======
Special thanks to Nick Sieger. He wrote the wonderful StartupScriptLauncher which this project would not exist without it.

Copyright (c) 2009 Jerry Luk, released under the MIT license
